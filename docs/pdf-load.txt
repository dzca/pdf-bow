https://stackoverflow.com/questions/12092633/pdf-js-rendering-a-pdf-file-using-a-base64-file-source-instead-of-url

https://react-dropzone.netlify.com/
========

onDrop: acceptedFiles => {
    const req = request.post('/upload');
    acceptedFiles.forEach(file => {
        req.attach(file.name, file);
    });
    req.end(callback);
}
================
export const displayOfferFile = (file) => {
  return (dispatch) => {
    dispatch(openOfferFile(file))

    return readFile(file)
    .then((data) => {
      dispatch(showOfferFileData({
        filedata: data,
        offerId: null,
        created: null,
      }))
      dispatch(addOffer(data))
    })
  }
}

model/files.js

const readFile = (file) => {
  return new Promise((resolve, reject) => {
    const reader = new FileReader()

    reader.onload = () => {
      let typedarray = new Uint8Array(reader.result)
      resolve(typedarray)
    }
    reader.onerror = (err) => {
      reject(err)
    }
    reader.readAsArrayBuffer(file)
  })
}



=================
// convert and display pdf here
<p> { this.state.loadedDoc.content } </p>

import React, { Component } from 'react';
import { Document, Page } from 'react-pdf';

class DisplayPdf extends Component {

	state = {
		numPages: null,
		pageNumber: 1,
	}

	onDocumentLoad = ({ numPages }) => {
		this.setState({ numPages });
	}


	render() {
		return(
			<div>
        <h1>DisplayPdf</h1>

        <Document
          file="questions.pdf"
          onLoadSuccess={this.onDocumentLoad}
        >
          <Page pageNumber={this.state.pageNumber} />
        </Document>
        <p>Page {this.state.pageNumber} of {this.state.numPages}</p>
      </div>


		)
	}
}

export default DisplayPdf;
